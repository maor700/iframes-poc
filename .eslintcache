[{"C:\\repos\\ifarems-poc\\src\\App.tsx":"1","C:\\repos\\ifarems-poc\\src\\index.tsx":"2","C:\\repos\\ifarems-poc\\src\\reportWebVitals.ts":"3","C:\\repos\\ifarems-poc\\src\\examples\\ExamplesMenu.tsx":"4","C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\IframeOne.tsx":"5","C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\TwoWayMessage.tsx":"6","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncMessage.tsx":"7","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\useAsyncMessage.ts":"8","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncIframe.tsx":"9","C:\\repos\\ifarems-poc\\src\\providers\\CalcProvider.ts":"10","C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModelIfarme.tsx":"11","C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModel.tsx":"12","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\IframeNotifications.tsx":"13","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\Notifications.tsx":"14","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\ModalIframe.tsx":"15","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\SharedModal.tsx":"16","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagment.tsx":"17","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentIframe.tsx":"18","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\users.ts":"19","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\dynamicLoadReducers.ts":"20","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\posts.ts":"21","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThings.tsx":"22","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThingsIframe.tsx":"23","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACacheIframe.tsx":"24","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACache.tsx":"25"},{"size":1876,"mtime":1612953072880,"results":"26","hashOfConfig":"27"},{"size":529,"mtime":1611477388674,"results":"28","hashOfConfig":"27"},{"size":425,"mtime":1611232341448,"results":"29","hashOfConfig":"27"},{"size":4757,"mtime":1612952987217,"results":"30","hashOfConfig":"27"},{"size":776,"mtime":1611488281308,"results":"31","hashOfConfig":"27"},{"size":1517,"mtime":1611522211949,"results":"32","hashOfConfig":"27"},{"size":1678,"mtime":1611657014501,"results":"33","hashOfConfig":"27"},{"size":3247,"mtime":1611657030095,"results":"34","hashOfConfig":"27"},{"size":1133,"mtime":1611846658298,"results":"35","hashOfConfig":"27"},{"size":461,"mtime":1611587841671,"results":"36","hashOfConfig":"27"},{"size":2250,"mtime":1611614185627,"results":"37","hashOfConfig":"27"},{"size":864,"mtime":1611612628925,"results":"38","hashOfConfig":"27"},{"size":691,"mtime":1611614680616,"results":"39","hashOfConfig":"27"},{"size":411,"mtime":1611614917212,"results":"40","hashOfConfig":"27"},{"size":2011,"mtime":1611742034002,"results":"41","hashOfConfig":"27"},{"size":813,"mtime":1611675059474,"results":"42","hashOfConfig":"27"},{"size":1471,"mtime":1612256830552,"results":"43","hashOfConfig":"27"},{"size":2892,"mtime":1612256843232,"results":"44","hashOfConfig":"27"},{"size":486,"mtime":1611842793382,"results":"45","hashOfConfig":"27"},{"size":1952,"mtime":1611843615077,"results":"46","hashOfConfig":"27"},{"size":537,"mtime":1611842787224,"results":"47","hashOfConfig":"27"},{"size":846,"mtime":1611849468663,"results":"48","hashOfConfig":"27"},{"size":437,"mtime":1611848099217,"results":"49","hashOfConfig":"27"},{"size":474,"mtime":1612956302183,"results":"50","hashOfConfig":"27"},{"size":1170,"mtime":1612955138307,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vm910n",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\repos\\ifarems-poc\\src\\App.tsx",["119","120","121","122"],"C:\\repos\\ifarems-poc\\src\\index.tsx",[],["123","124"],"C:\\repos\\ifarems-poc\\src\\reportWebVitals.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\ExamplesMenu.tsx",[],"C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\IframeOne.tsx",["125"],"import React, { FC, useEffect, useState } from \"react\";\r\nexport const IframeOne = () => {\r\n    const [str, setStr] = useState<string>('');\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n        window.addEventListener(\"message\", (ev) => { setStr(ev?.data) }, false);\r\n    }, []);\r\n\r\n    const sendToParent = (val: string) => {\r\n        window?.parent?.postMessage(`${val}`, \"*\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"field\">\r\n                <input type=\"text\" value={str} onChange={({ target }) => sendToParent(target.value)} />\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\TwoWayMessage.tsx",["126"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { isString } from \"util\";\r\nimport \"./TwoWayMessage.css\";\r\nconst TwoWayMessage = () => {\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n    const handler = useCallback(({ data }) => {\r\n        console.log(data)\r\n        if (isString(data)) {\r\n            setSomeValue(data);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"message\", handler);\r\n        return () => {\r\n            window.removeEventListener(\"message\", handler);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sendValue(someValue);\r\n    }, [someValue])\r\n\r\n    const sendValue = (val: string) => {\r\n        const iframesWin = [oneRef.current?.contentWindow, twoRef.current?.contentWindow];\r\n        iframesWin?.forEach((win) => win?.postMessage(`${val}`, \"*\"));\r\n    }\r\n\r\n    return (\r\n        <div className=\"con\">\r\n            <div className=\"field\">\r\n                <label htmlFor=\"somVal\">Type your value</label>\r\n                <input type=\"text\" name=\"somVal\" value={someValue} onChange={({ target }) => setSomeValue(target.value)} />\r\n            </div>\r\n            <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/iframe1?title=iframeChild1\" />\r\n            <iframe title=\"two\" ref={twoRef} id=\"two\" src=\"/iframe1?title=iframeChild2\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TwoWayMessage;","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncMessage.tsx",["127","128"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { fetchFromIframe, useCreateIframeEndPoint } from \"./useAsyncMessage\";\r\n\r\n\r\nexport const GET_DATA_EVENT_NAME = \"GET_DATA\";\r\n\r\nconst AsyncMessage = () => {\r\n    const [someData, setSomeData] = useState<string>('');\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n    const getData = async () => {\r\n        setLoading(true);\r\n        const all: Promise<string>[] = [];\r\n        [oneRef, twoRef].forEach((ref) => {\r\n            all.push(fetchFromIframe<any, any>({ eventName: GET_DATA_EVENT_NAME }, ref.current?.contentWindow as Window))\r\n        });\r\n        try {\r\n            const result = await Promise.all(all);\r\n            setSomeData(JSON.stringify(result));\r\n        } catch (error) {\r\n            setSomeData(JSON.stringify(error));\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"con\">\r\n            <h2>Async Massage</h2>\r\n            <div className=\"field\">\r\n                <button onClick={async () => await getData()}>Give Me Your Data Please</button>\r\n                <div className=\"data\">\r\n                    {loading && <div className=\"loader\">Loading...</div>}\r\n                    {!loading && <div className=\"loader\">{someData}</div>}\r\n                </div>\r\n            </div>\r\n            <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/asyncIframe?title=iframeChild1\" />\r\n            <iframe title=\"two\" ref={twoRef} id=\"one\" src=\"/asyncIframe?title=iframeChild2\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AsyncMessage;","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\useAsyncMessage.ts",["129","130","131"],"\r\nimport { RefObject, useCallback, useEffect } from \"react\";\r\nimport { v1 } from \"uuid\";\r\n\r\nconst TIME_OUT = 10000;\r\n\r\nexport interface IframeMessageEvent<T = any> {\r\n    requestId?: string,\r\n    eventName: string,\r\n    payload?: T,\r\n    errors?: string[]\r\n}\r\n\r\nexport const getEndPointEventNames = (endPointName: string): { req: string, res: string, error: string } => {\r\n    return { req: `${endPointName}_req`, res: `${endPointName}_res`, error: `${endPointName}_error` }\r\n}\r\n\r\nexport async function fetchFromIframe<T = any, S = any>(message: IframeMessageEvent<T>, targetWin: Window): Promise<S> {\r\n    const { eventName, payload } = message;\r\n    const { req, res, error } = getEndPointEventNames(eventName);\r\n    const eventsNames = [req, error];\r\n    const token = v1();\r\n    return new Promise((resolve, reject) => {\r\n        const senderWin = targetWin?.parent;\r\n        const timeoutCleaner = setTimeout(function () {\r\n            reject([\"timeout\"]);\r\n            _clean();\r\n        }, TIME_OUT);\r\n        const _clean = () => {\r\n            clearTimeout(timeoutCleaner);\r\n            senderWin?.removeEventListener(\"message\", onMessageHandler);\r\n        }\r\n        const onMessageHandler: (this: Window, ev: MessageEvent<IframeMessageEvent<S>>) => any = ({ data }) => {\r\n            const { eventName, payload, requestId, errors } = data;\r\n            if (!eventsNames.includes(eventName) && requestId === token) return;\r\n            console.log(`sender onmassage ${eventName} handler call`);\r\n\r\n            switch (eventName) {\r\n                case res: _clean(); console.log(\"resolved\"); payload && resolve(payload); break;\r\n                case error: _clean(); console.log(\"rejected\"); reject(errors); break;\r\n            }\r\n        }\r\n        console.log(\"Event listener on Window\");\r\n        senderWin.addEventListener(\"message\", onMessageHandler);\r\n        console.log(`Event ${req} posted to iframe`);\r\n        targetWin.postMessage({ eventName: req, payload, requestId: token }, \"*\");\r\n\r\n    })\r\n}\r\n\r\nexport const useCreateIframeEndPoint = (endPoint: string, iframeWindow: Window, handler: (message: any) => Promise<any>) => {\r\n    const { req, res, error } = getEndPointEventNames(endPoint);\r\n\r\n    const onMessageHandler: (this: Window, ev: MessageEvent<any>) => any = useCallback((ev) => {\r\n        const { requestId, payload, eventName, errors } = ev?.data;\r\n        let iframeWin = iframeWindow;\r\n        let senderWin = iframeWin?.parent;\r\n        console.log(\"handler call\");\r\n        if (eventName !== req) return;\r\n        handler(payload)\r\n            .then((data) => {\r\n                senderWin?.postMessage({ eventName: res, requestId, payload: data }, \"*\")\r\n            })\r\n            .catch(() => {\r\n                senderWin?.postMessage({ eventName: error, requestId, errors }, \"*\")\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let iframeWin = iframeWindow\r\n        let senderWin = iframeWin?.parent;\r\n        if (!iframeWin || !senderWin) return;\r\n        console.log(`Event listener on iframe`);\r\n        iframeWin.addEventListener(\"message\", onMessageHandler)\r\n        return () => { console.log(\"unmounted\"); iframeWin?.removeEventListener(\"message\", onMessageHandler) }\r\n    }, [])\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncIframe.tsx",[],"C:\\repos\\ifarems-poc\\src\\providers\\CalcProvider.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModelIfarme.tsx",["132","133","134"],"import React, { FC, useCallback, useEffect, useState } from \"react\";\r\nexport const SharedModelIfarme = () => {\r\n    const [argA, setArgA] = useState<number>(0);\r\n    const [argB, setArgB] = useState<number>(0);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [result, setResult] = useState<number>(0);\r\n    const [lastResult, setLastResult] = useState<number>(0);\r\n    const [calcService, setCalcService] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    const ProxyHandler: ProxyHandler<object> = {\r\n        get: (target: any, prop: string, reciver: any) => {\r\n            if (typeof target[prop] === \"function\") {\r\n                return new Proxy((target[prop] as Function), {\r\n                    apply: (target: Function, thisArg: any, argArray?: any) => {\r\n                        return target.call(calcService, ...argArray)\r\n                    }\r\n                })\r\n            }\r\n            return target[prop];\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!window?.parent || calcService) return;\r\n        const calc = new Proxy((window as any).parent.CalcProvider, ProxyHandler);\r\n        setCalcService(calc);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!calcService) return;\r\n        const result = calcService.Add(argA, argB);\r\n        setResult(result);\r\n    }, [argA, argB, calcService]);\r\n\r\n    const getLastResult = useCallback(() => {\r\n        setLastResult(calcService?.lastResult)\r\n    }, [result]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"field\">\r\n                <input type=\"number\" value={argA} onChange={({ target }) => setArgA(Number.parseInt(target.value))} />\r\n                <input type=\"number\" value={argB} onChange={({ target }) => setArgB(Number.parseInt(target.value))} />\r\n            </div>\r\n            <div className=\"result\">{result}</div>\r\n            <button onClick={getLastResult}>Get Last Value</button>\r\n            <div className=\"result\">{lastResult}</div>\r\n            <button onClick={() => { calcService.lastResult++ }}>Increase lastResult value</button>\r\n        </>\r\n    )\r\n}\r\n","C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModel.tsx",["135","136","137","138"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { isString } from \"util\";\r\nimport { CalcProvider } from \"../../providers/CalcProvider\";\r\nimport \"./SharedModel.css\";\r\nconst TwoWayMessage = () => {\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        (window as any).CalcProvider = new CalcProvider();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"con\">\r\n            <h2>Shared Model</h2>\r\n            <iframe title=\"one\" height={\"300px\"} ref={oneRef} id=\"one\" src=\"/shared_model?title=iframeChild1\" />\r\n            <iframe title=\"two\" height={\"300px\"} ref={twoRef} id=\"two\" src=\"/shared_model?title=iframeChild2\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TwoWayMessage;","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\IframeNotifications.tsx",["139"],"import React, { FC, useEffect, useState } from \"react\";\r\nexport const NotificationIframe = () => {\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <button onClick={() => {\r\n                Notification.requestPermission().then(function (permission) {\r\n                    if (permission === \"granted\") {\r\n                        new Notification(\"Hi there!\");\r\n                    }\r\n                });\r\n            }}>Notifi Me</button>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\Notifications.tsx",["140","141","142","143"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { isString } from \"util\";\r\n\r\nconst Notifications = () => {\r\n    const oneRef = useRef(null);\r\n    return (\r\n        <div className=\"con\">\r\n            <h2>Notifications</h2>\r\n            <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/notification_iframe?title=iframe\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\ModalIframe.tsx",["144","145"],"import React, { DialogHTMLAttributes, FC, useEffect, useRef, useState } from \"react\";\r\nexport const ModalIframe = () => {\r\n    const [counter, setCounter] = useState<number>(0);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [parentModal, setParentModal] = useState<HTMLDialogElement | null>();\r\n    const modalContentRef = useRef<HTMLDivElement>(null);\r\n    const increaseBtnRef = useRef<HTMLButtonElement>(null);\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!window?.parent?.window) return;\r\n        setParentModal(window.parent.window.document.body.querySelector<HTMLDialogElement>(\"#my-dialog\"));\r\n    }, []);\r\n\r\n    const showModal = () => {\r\n        if (!parentModal || !modalContentRef.current || !parentModal.parentElement || !increaseBtnRef.current) return;\r\n        const parentElement = parentModal.parentElement;\r\n        const modalElm = document.createElement('div');\r\n        modalElm.innerText = \"Some TEXT\";\r\n        parentModal.innerHTML = '';\r\n        parentModal.appendChild(modalContentRef.current);\r\n        parentElement?.classList.add(\"opened\");\r\n        increaseBtnRef.current.onclick = (ev)=>increase.call(this, ev);\r\n        parentElement.onclick = () => { parentElement.classList.remove(\"opened\"); parentModal?.setAttribute(\"open\", \"false\"); };\r\n        parentModal?.setAttribute(\"open\", \"true\");\r\n    }\r\n    const increase = (ev:MouseEvent) => {\r\n        ev.stopPropagation();\r\n        setCounter.call(this,counter + 1)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <button onClick={showModal}>Show Modal</button>\r\n            <div ref={modalContentRef} style={{ color: \"red\" }}>\r\n                <div className=\"\">\r\n                    counter:{counter}\r\n                </div>\r\n                <button ref={increaseBtnRef}>increase</button>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\SharedModal.tsx",["146","147","148","149"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport \"./SharedModal.css\";\r\n\r\nconst SharedModal = () => {\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"con\">\r\n               <h2>Show Modal</h2>\r\n                <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/modal_iframe?title=iframeChild1\" />\r\n                <iframe title=\"two\" ref={twoRef} id=\"two\" src=\"/modal_iframe?title=iframeChild2\" />\r\n            </div>\r\n            <div className=\"modals\">\r\n                <dialog open={false} id=\"my-dialog\">\r\n                </dialog>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SharedModal;","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagment.tsx",["150","151","152","153","154","155"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { createStore, AnyAction } from 'redux';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport \"./StateManagment.css\";\r\nimport { StateManagementIframeWrapper } from \"./StateManagmentIframe\";\r\nimport { configureStore, createReducer } from \"./dynamicLoadReducers\";\r\n\r\n\r\nconst StateManagment = () => {\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const val = useSelector(state => JSON.stringify(state));\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n    const [showPosts, setShowPosts] = useState<boolean>(false);\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"con\">\r\n            <h2>State Management</h2>\r\n            <div className=\"\">{val}</div>\r\n            <button onClick={()=>setShowPosts(!showPosts)}>Show Posts</button>\r\n            <iframe title=\"one\" height={\"300px\"} ref={oneRef} id=\"one\" src=\"/state_managemnet_Iframe?title=users\" />\r\n            {showPosts && <iframe title=\"two\" height={\"300px\"} ref={twoRef} id=\"two\" src=\"/state_managemnet_Iframe?title=posts\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst store = configureStore({});\r\n\r\nconst StateManagmentWrapper = () => {\r\n\r\n    useEffect(() => {\r\n        (window as any).Store = store;\r\n    }, []);\r\n\r\n    return (\r\n        < Provider store={store} >\r\n            <StateManagment />\r\n        </Provider >)\r\n\r\n}\r\n\r\nexport default StateManagmentWrapper;\r\n","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentIframe.tsx",["156","157","158","159","160","161","162","163","164","165"],"import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { AnyAction, Store, Reducer, Action } from \"redux\";\r\nimport { Provider, useDispatch, useSelector } from 'react-redux';\r\nimport { injectAsyncReducer, removeReducer } from \"./dynamicLoadReducers\";\r\n\r\nexport const StateManagmentIframe = ({ type }: { type: string }) => {\r\n    const [payload, setPayload] = useState<Object>({});\r\n    const [title, setTitle] = useState<string>('');\r\n    const result = useSelector((state: any) => state[type]);\r\n    const actionRef = useRef<() => Action<any>>();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!type) return;\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n        import(`./reducers/${type}`).then(({ actionCreator }) => {\r\n            actionRef.current = actionCreator;\r\n        })\r\n    }, [type]);\r\n\r\n    const addHandler = useCallback((ev) => {\r\n        dispatch(actionRef.current?.());\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"field\">\r\n                <button onClick={addHandler}>Add {type}</button>\r\n            </div>\r\n            <div className=\"result\">{JSON.stringify(result)}</div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport const StateManagementIframeWrapper = () => {\r\n    const [store, setStore] = useState<Store<any>>();\r\n    const [iframeType, setIframeType] = useState<string>(\"\");\r\n\r\n    const ProxyHandler: ProxyHandler<object> = {\r\n        get: (target: any, prop: string, reciver: any) => {\r\n            if (typeof target[prop] === \"function\") {\r\n                return new Proxy((target[prop] as Function), {\r\n                    apply: (target: Function, thisArg: any, argArray?: any) => {\r\n                        return target.call(store, ...argArray)\r\n                    }\r\n                })\r\n            }\r\n            return target[prop];\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!(window?.parent as any)?.Store || store) return;\r\n        const s = (window as any).parent.Store;//new Proxy((window as any).parent.Store, ProxyHandler);\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setIframeType(title);\r\n        title && import(`./reducers/${title}`).then((module: any) => {\r\n            const reducer = module?.[title];\r\n            console.log(reducer);\r\n            injectAsyncReducer(s, title, reducer)\r\n        })\r\n        setStore(s);\r\n    }, [(window?.parent as any)?.Store]);\r\n\r\n    useEffect(() => () => {\r\n        debugger;\r\n        removeReducer(store, iframeType as string)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h2>test</h2>\r\n            {store ? <Provider store={store}>\r\n                <StateManagmentIframe type={iframeType} />\r\n            </Provider> : null}\r\n        </>)\r\n}\r\n\r\n","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\users.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\dynamicLoadReducers.ts",["166"],"// This part of code is copied from Dan Abramov answer - https://stackoverflow.com/a/33044701/2902013 \r\n\r\nimport { combineReducers, Reducer, Store } from 'redux';\r\nimport { createStore } from 'redux';\r\n//couple of reducers available as part of inital config of app.\r\n// import users from './reducers/users';\r\n// import posts from './reducers/posts';\r\n\r\n\r\n\r\nexport function createReducer(asyncReducers?: { [key: string]: Reducer }) {\r\n    return combineReducers({\r\n        ...asyncReducers\r\n    });\r\n}\r\n\r\nexport function configureStore(initialState: any) {\r\n    const store = createStore(createReducer(), initialState);\r\n    (store as any).asyncReducers = {};\r\n    return store;\r\n}\r\n\r\nexport function injectAsyncReducer(store: any, name: string, asyncReducer: Reducer) {\r\n    store.asyncReducers[name] = asyncReducer;\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n}\r\n\r\nexport function removeReducer(store: any, name: string) {\r\n    delete store?.asyncReducers?.[name];\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n}\r\n\r\n// Assuming React Router here but the principle is the same\r\n// regardless of the library: make sure store is available\r\n// when you want to require.ensure() your reducer so you can call\r\n// injectAsyncReducer(store, name, reducer).\r\n\r\n// function createRoutes(store:Store) {\r\n//     // ...\r\n\r\n//     const CommentsRoute = {\r\n//         // ...\r\n\r\n//         getComponents(location, callback) {\r\n//             require.ensure([\r\n//                 './pages/Comments',\r\n//                 './reducers/comments'\r\n//             ], function (require) {\r\n//                 const Comments = require('./pages/Comments').default;\r\n//                 const commentsReducer = require('./reducers/comments').default;\r\n\r\n//                 injectAsyncReducer(store, 'comments', commentsReducer);\r\n//                 callback(null, Comments);\r\n//             })\r\n//         }\r\n//     };\r\n\r\n//     // ...\r\n// }","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\posts.ts",["167","168"],"import { Action, AnyAction } from \"redux\"\r\n\r\ninterface Post {\r\n    title: string,\r\n    author: string,\r\n    description: string\r\n}\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nexport const actionCreator = () => ({ type: ADD_POST, payload: { title: \"Ohad\", author: \"benShimol\", description: \"aaa\" } as Post })\r\n\r\nexport function posts(state: Post[] = [], { type, payload }: { type: string, payload: Post }) {\r\n    switch (type) {\r\n        case ADD_POST:\r\n            return state.concat(payload);\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThings.tsx",["169","170","171"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Resizable, ResizableBox } from 'react-resizable';\r\nimport './handlerStyle.css';\r\n\r\nconst UiThings = () => {\r\n    const oneRef = useRef(null);\r\n    const [wh, setWh] = useState<number[]>([200, 200]);\r\n    return (\r\n\r\n        <div className=\"con\">\r\n            <h2>UI Things</h2>\r\n            <ResizableBox onResize={(ev, { size }) => setWh([size.width - 35, size.height - 35])} width={350} height={200} draggableOpts={{}} minConstraints={[100, 100]} maxConstraints={[700, 700]}>\r\n                <iframe style={{ border: \"1px solid red\", width: wh[0], height: wh[1] }} title=\"one\" ref={oneRef} id=\"one\" src=\"/ui_things_iframe?title=iframe\" />\r\n                <span>Contents</span>\r\n            </ResizableBox>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UiThings;","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThingsIframe.tsx",["172"],"import React, { FC, useEffect, useState } from \"react\";\r\n\r\nexport const UiThingsIframe = () => {\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"\">qwerawefawerraw</div>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACacheIframe.tsx",["173"],"C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACache.tsx",["174","175","176","177"],{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"182","line":7,"column":3,"nodeType":"180","messageId":"181","endLine":7,"endColumn":7},{"ruleId":"178","severity":1,"message":"183","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":19},{"ruleId":"178","severity":1,"message":"184","line":17,"column":8,"nodeType":"180","messageId":"181","endLine":17,"endColumn":16},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"178","severity":1,"message":"189","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":21,"column":8,"nodeType":"192","endLine":21,"endColumn":10,"suggestions":"193"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"194","line":2,"column":27,"nodeType":"180","messageId":"181","endLine":2,"endColumn":50},{"ruleId":"178","severity":1,"message":"195","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":19},{"ruleId":"190","severity":1,"message":"196","line":67,"column":8,"nodeType":"192","endLine":67,"endColumn":10,"suggestions":"197"},{"ruleId":"190","severity":1,"message":"198","line":76,"column":8,"nodeType":"192","endLine":76,"endColumn":10,"suggestions":"199"},{"ruleId":"178","severity":1,"message":"189","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":19},{"ruleId":"190","severity":1,"message":"200","line":32,"column":8,"nodeType":"192","endLine":32,"endColumn":10,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"202","line":42,"column":8,"nodeType":"192","endLine":42,"endColumn":16,"suggestions":"203"},{"ruleId":"178","severity":1,"message":"204","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":28},{"ruleId":"178","severity":1,"message":"205","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":18},{"ruleId":"178","severity":1,"message":"206","line":6,"column":12,"nodeType":"180","messageId":"181","endLine":6,"endColumn":21},{"ruleId":"178","severity":1,"message":"207","line":6,"column":23,"nodeType":"180","messageId":"181","endLine":6,"endColumn":35},{"ruleId":"178","severity":1,"message":"189","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":19},{"ruleId":"178","severity":1,"message":"204","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":1,"column":30,"nodeType":"180","messageId":"181","endLine":1,"endColumn":39},{"ruleId":"178","severity":1,"message":"208","line":1,"column":49,"nodeType":"180","messageId":"181","endLine":1,"endColumn":57},{"ruleId":"178","severity":1,"message":"205","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":18},{"ruleId":"178","severity":1,"message":"209","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":37},{"ruleId":"178","severity":1,"message":"189","line":1,"column":39,"nodeType":"180","messageId":"181","endLine":1,"endColumn":41},{"ruleId":"178","severity":1,"message":"204","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":1,"column":30,"nodeType":"180","messageId":"181","endLine":1,"endColumn":39},{"ruleId":"178","severity":1,"message":"206","line":5,"column":12,"nodeType":"180","messageId":"181","endLine":5,"endColumn":21},{"ruleId":"178","severity":1,"message":"207","line":5,"column":23,"nodeType":"180","messageId":"181","endLine":5,"endColumn":35},{"ruleId":"178","severity":1,"message":"210","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":21},{"ruleId":"178","severity":1,"message":"211","line":2,"column":23,"nodeType":"180","messageId":"181","endLine":2,"endColumn":32},{"ruleId":"178","severity":1,"message":"212","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":38},{"ruleId":"178","severity":1,"message":"213","line":6,"column":26,"nodeType":"180","messageId":"181","endLine":6,"endColumn":39},{"ruleId":"178","severity":1,"message":"206","line":10,"column":12,"nodeType":"180","messageId":"181","endLine":10,"endColumn":21},{"ruleId":"178","severity":1,"message":"207","line":10,"column":23,"nodeType":"180","messageId":"181","endLine":10,"endColumn":35},{"ruleId":"178","severity":1,"message":"189","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":19},{"ruleId":"178","severity":1,"message":"211","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":19},{"ruleId":"178","severity":1,"message":"214","line":2,"column":28,"nodeType":"180","messageId":"181","endLine":2,"endColumn":35},{"ruleId":"178","severity":1,"message":"215","line":7,"column":12,"nodeType":"180","messageId":"181","endLine":7,"endColumn":19},{"ruleId":"178","severity":1,"message":"216","line":7,"column":21,"nodeType":"180","messageId":"181","endLine":7,"endColumn":31},{"ruleId":"190","severity":1,"message":"217","line":24,"column":8,"nodeType":"192","endLine":24,"endColumn":10,"suggestions":"218"},{"ruleId":"178","severity":1,"message":"219","line":43,"column":11,"nodeType":"180","messageId":"181","endLine":43,"endColumn":45},{"ruleId":"190","severity":1,"message":"220","line":67,"column":8,"nodeType":"192","endLine":67,"endColumn":40,"suggestions":"221"},{"ruleId":"190","severity":1,"message":"222","line":67,"column":9,"nodeType":"223","endLine":67,"endColumn":39},{"ruleId":"190","severity":1,"message":"224","line":72,"column":8,"nodeType":"192","endLine":72,"endColumn":10,"suggestions":"225"},{"ruleId":"178","severity":1,"message":"226","line":3,"column":36,"nodeType":"180","messageId":"181","endLine":3,"endColumn":41},{"ruleId":"178","severity":1,"message":"227","line":1,"column":10,"nodeType":"180","messageId":"181","endLine":1,"endColumn":16},{"ruleId":"178","severity":1,"message":"211","line":1,"column":18,"nodeType":"180","messageId":"181","endLine":1,"endColumn":27},{"ruleId":"178","severity":1,"message":"204","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":1,"column":30,"nodeType":"180","messageId":"181","endLine":1,"endColumn":39},{"ruleId":"178","severity":1,"message":"228","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":19},{"ruleId":"178","severity":1,"message":"189","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":19},{"ruleId":"178","severity":1,"message":"189","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":19},{"ruleId":"178","severity":1,"message":"204","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":28},{"ruleId":"178","severity":1,"message":"228","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":19},{"ruleId":"178","severity":1,"message":"229","line":2,"column":21,"nodeType":"180","messageId":"181","endLine":2,"endColumn":33},{"ruleId":"178","severity":1,"message":"230","line":6,"column":16,"nodeType":"180","messageId":"181","endLine":6,"endColumn":21},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'SharedModel' is defined but never used.","'UiThings' is defined but never used.","no-native-reassign",["231"],"no-negated-in-lhs",["232"],"'FC' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'useCreateIframeEndPoint' is defined but never used.","'RefObject' is defined but never used.","React Hook useCallback has missing dependencies: 'error', 'handler', 'iframeWindow', 'req', and 'res'. Either include them or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["234"],"React Hook useEffect has missing dependencies: 'iframeWindow' and 'onMessageHandler'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'ProxyHandler' and 'calcService'. Either include them or remove the dependency array.",["236"],"React Hook useCallback has a missing dependency: 'calcService?.lastResult'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLastResult' needs the current value of 'calcService.lastResult'.",["237"],"'useCallback' is defined but never used.","'isString' is defined but never used.","'someValue' is assigned a value but never used.","'setSomeValue' is assigned a value but never used.","'useState' is defined but never used.","'DialogHTMLAttributes' is defined but never used.","'createStore' is defined but never used.","'AnyAction' is defined but never used.","'StateManagementIframeWrapper' is defined but never used.","'createReducer' is defined but never used.","'Reducer' is defined but never used.","'payload' is assigned a value but never used.","'setPayload' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["238"],"'ProxyHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["239"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ChainExpression","React Hook useEffect has missing dependencies: 'iframeType' and 'store'. Either include them or remove the dependency array.",["240"],"'Store' is defined but never used.","'Action' is defined but never used.","'Resizable' is defined but never used.","'ResizableBox' is defined but never used.","'setWh' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [handler]",{"range":"257","text":"258"},"Update the dependencies array to be: [error, handler, iframeWindow, req, res]",{"range":"259","text":"260"},"Update the dependencies array to be: [iframeWindow, onMessageHandler]",{"range":"261","text":"262"},"Update the dependencies array to be: [ProxyHandler, calcService]",{"range":"263","text":"264"},"Update the dependencies array to be: [calcService?.lastResult]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch]",{"range":"267","text":"268"},"Update the dependencies array to be: [store]",{"range":"269","text":"270"},"Update the dependencies array to be: [iframeType, store]",{"range":"271","text":"272"},[684,686],"[handler]",[2847,2849],"[error, handler, iframeWindow, req, res]",[3241,3243],"[iframeWindow, onMessageHandler]",[1293,1295],"[ProxyHandler, calcService]",[1580,1588],"[calcService?.lastResult]",[1026,1028],"[dispatch]",[2528,2560],"[store]",[2673,2675],"[iframeType, store]"]