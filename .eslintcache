[{"C:\\repos\\ifarems-poc\\src\\App.tsx":"1","C:\\repos\\ifarems-poc\\src\\index.tsx":"2","C:\\repos\\ifarems-poc\\src\\reportWebVitals.ts":"3","C:\\repos\\ifarems-poc\\src\\examples\\ExamplesMenu.tsx":"4","C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\IframeOne.tsx":"5","C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\TwoWayMessage.tsx":"6","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncMessage.tsx":"7","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\useAsyncMessage.ts":"8","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncIframe.tsx":"9","C:\\repos\\ifarems-poc\\src\\providers\\CalcProvider.ts":"10","C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModelIfarme.tsx":"11","C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModel.tsx":"12","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\IframeNotifications.tsx":"13","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\Notifications.tsx":"14","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\ModalIframe.tsx":"15","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\SharedModal.tsx":"16","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagment.tsx":"17","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentIframe.tsx":"18","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\users.ts":"19","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\dynamicLoadReducers.ts":"20","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\posts.ts":"21","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThings.tsx":"22","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThingsIframe.tsx":"23","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACacheIframe.tsx":"24","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACache.tsx":"25","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentDexie.tsx":"26","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentDexieIframe.tsx":"27","C:\\repos\\ifarems-poc\\src\\todo-react\\components.ts":"28","C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\index.ts":"29","C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\createComponent.tsx":"30","C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\createOverlayComponent.tsx":"31","C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\utils\\index.tsx":"32","C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\utils\\attachProps.ts":"33","C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\utils\\case.ts":"34","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\todoDbService.ts":"35","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\modalContentLitElement.ts":"36","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\UiLauncher.ts":"37","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\IframeCross.tsx":"38"},{"size":2831,"mtime":1619014733119,"results":"39","hashOfConfig":"40"},{"size":529,"mtime":1611477388674,"results":"41","hashOfConfig":"40"},{"size":425,"mtime":1611232341448,"results":"42","hashOfConfig":"40"},{"size":5210,"mtime":1617543808229,"results":"43","hashOfConfig":"40"},{"size":776,"mtime":1611488281308,"results":"44","hashOfConfig":"40"},{"size":1517,"mtime":1611522211949,"results":"45","hashOfConfig":"40"},{"size":1678,"mtime":1611657014501,"results":"46","hashOfConfig":"40"},{"size":3247,"mtime":1611657030095,"results":"47","hashOfConfig":"40"},{"size":1133,"mtime":1611846658298,"results":"48","hashOfConfig":"40"},{"size":461,"mtime":1611587841671,"results":"49","hashOfConfig":"40"},{"size":2250,"mtime":1611614185627,"results":"50","hashOfConfig":"40"},{"size":864,"mtime":1611612628925,"results":"51","hashOfConfig":"40"},{"size":691,"mtime":1611614680616,"results":"52","hashOfConfig":"40"},{"size":411,"mtime":1611614917212,"results":"53","hashOfConfig":"40"},{"size":2113,"mtime":1616280391868,"results":"54","hashOfConfig":"40"},{"size":1544,"mtime":1616280197856,"results":"55","hashOfConfig":"40"},{"size":1363,"mtime":1615551126864,"results":"56","hashOfConfig":"40"},{"size":2892,"mtime":1612256843232,"results":"57","hashOfConfig":"40"},{"size":486,"mtime":1611842793382,"results":"58","hashOfConfig":"40"},{"size":1952,"mtime":1611843615077,"results":"59","hashOfConfig":"40"},{"size":537,"mtime":1611842787224,"results":"60","hashOfConfig":"40"},{"size":846,"mtime":1611849468663,"results":"61","hashOfConfig":"40"},{"size":437,"mtime":1611848099217,"results":"62","hashOfConfig":"40"},{"size":474,"mtime":1612956302183,"results":"63","hashOfConfig":"40"},{"size":655,"mtime":1619366137267,"results":"64","hashOfConfig":"40"},{"size":1239,"mtime":1619014735416,"results":"65","hashOfConfig":"40"},{"size":1693,"mtime":1617110995319,"results":"66","hashOfConfig":"40"},{"size":620,"mtime":1615991100512,"results":"67","hashOfConfig":"40"},{"size":125,"mtime":499162500000,"results":"68","hashOfConfig":"40"},{"size":2671,"mtime":499162500000,"results":"69","hashOfConfig":"40"},{"size":3765,"mtime":499162500000,"results":"70","hashOfConfig":"40"},{"size":1226,"mtime":499162500000,"results":"71","hashOfConfig":"40"},{"size":3907,"mtime":499162500000,"results":"72","hashOfConfig":"40"},{"size":295,"mtime":499162500000,"results":"73","hashOfConfig":"40"},{"size":1272,"mtime":1617805302919,"results":"74","hashOfConfig":"40"},{"size":991,"mtime":1617544452083,"results":"75","hashOfConfig":"40"},{"size":1566,"mtime":1616077523613,"results":"76","hashOfConfig":"40"},{"size":1091,"mtime":1619366137266,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"82izry",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},"C:\\repos\\ifarems-poc\\src\\App.tsx",["178","179","180"],"import React, { useEffect } from 'react';\nimport { IframeOne } from \"./examples/TwoWayMessage/IframeOne\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport { ExamplesMenu } from './examples/ExamplesMenu';\nimport { AsyncIframe } from './examples/AsyncMessage/AsyncIframe';\nimport SharedModel from './examples/SharedModel/SharedModel';\nimport { SharedModelIfarme } from './examples/SharedModel/SharedModelIfarme';\nimport { NotificationIframe } from './examples/Notofications/IframeNotifications';\nimport { ModalIframe } from './examples/SharedModal/ModalIframe';\nimport { StateManagementIframeWrapper } from './examples/StateManagment/StateManagmentIframe';\nimport UiThings from './examples/UiThings.tsx/UiThings';\nimport { UiThingsIframe } from './examples/UiThings.tsx/UiThingsIframe';\nimport { PWACacheIframe } from './examples/PWACache/PWACacheIframe';\nimport { StateManagmentDexieIframe } from './examples/StateManagment/StateManagmentDexieIframe';\nimport { defineCustomElements } from \"todo-app/dist/loader\";\nimport { TodoAppData } from \"./examples/StateManagment/todoDbService\"\n\ndefineCustomElements();\n\nexport const db = new TodoAppData();\nconsole.log(db);\n\nfunction App() {\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      // Use the window load event to keep the page load performant\n      navigator.serviceWorker.register(\"./service-worker.js\")\n        .then(function (registration) {\n          // Registration was successful\n          console.log('ServiceWorker registration successful with scope: ', registration.scope);\n        }, function (err) {\n          // registration failed :(\n          console.log('ServiceWorker registration failed: ', err);\n        });\n    }\n  }, []);\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/menu\">\n            <ExamplesMenu />\n          </Route>\n          <Route path=\"/iframe1\">\n            <IframeOne />\n          </Route>\n          <Route path=\"/asyncIframe\">\n            <AsyncIframe />\n          </Route>\n          <Route path=\"/shared_model\">\n            <SharedModelIfarme />\n          </Route>\n          <Route path=\"/modal_iframe\">\n            <ModalIframe />\n          </Route>\n          <Route path=\"/notification_iframe\">\n            <NotificationIframe />\n          </Route>\n          <Route path=\"/state_managemnet_Iframe\">\n            <StateManagementIframeWrapper />\n          </Route>\n          <Route path=\"/state_managemnet_dexie_Iframe\">\n            <StateManagmentDexieIframe />\n          </Route>\n          <Route path=\"/ui_things_iframe\">\n            <UiThingsIframe />\n          </Route>\n          <Route path=\"/PWA_Cache_iframe\">\n            <PWACacheIframe />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nexport default App;\n","C:\\repos\\ifarems-poc\\src\\index.tsx",[],"C:\\repos\\ifarems-poc\\src\\reportWebVitals.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\ExamplesMenu.tsx",[],"C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\IframeOne.tsx",["181"],"import React, { FC, useEffect, useState } from \"react\";\r\nexport const IframeOne = () => {\r\n    const [str, setStr] = useState<string>('');\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n        window.addEventListener(\"message\", (ev) => { setStr(ev?.data) }, false);\r\n    }, []);\r\n\r\n    const sendToParent = (val: string) => {\r\n        window?.parent?.postMessage(`${val}`, \"*\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"field\">\r\n                <input type=\"text\" value={str} onChange={({ target }) => sendToParent(target.value)} />\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\TwoWayMessage\\TwoWayMessage.tsx",["182"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { isString } from \"util\";\r\nimport \"./TwoWayMessage.css\";\r\nconst TwoWayMessage = () => {\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n    const handler = useCallback(({ data }) => {\r\n        console.log(data)\r\n        if (isString(data)) {\r\n            setSomeValue(data);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"message\", handler);\r\n        return () => {\r\n            window.removeEventListener(\"message\", handler);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sendValue(someValue);\r\n    }, [someValue])\r\n\r\n    const sendValue = (val: string) => {\r\n        const iframesWin = [oneRef.current?.contentWindow, twoRef.current?.contentWindow];\r\n        iframesWin?.forEach((win) => win?.postMessage(`${val}`, \"*\"));\r\n    }\r\n\r\n    return (\r\n        <div className=\"con\">\r\n            <div className=\"field\">\r\n                <label htmlFor=\"somVal\">Type your value</label>\r\n                <input type=\"text\" name=\"somVal\" value={someValue} onChange={({ target }) => setSomeValue(target.value)} />\r\n            </div>\r\n            <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/iframe1?title=iframeChild1\" />\r\n            <iframe title=\"two\" ref={twoRef} id=\"two\" src=\"/iframe1?title=iframeChild2\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TwoWayMessage;","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncMessage.tsx",["183","184"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { fetchFromIframe, useCreateIframeEndPoint } from \"./useAsyncMessage\";\r\n\r\n\r\nexport const GET_DATA_EVENT_NAME = \"GET_DATA\";\r\n\r\nconst AsyncMessage = () => {\r\n    const [someData, setSomeData] = useState<string>('');\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n    const getData = async () => {\r\n        setLoading(true);\r\n        const all: Promise<string>[] = [];\r\n        [oneRef, twoRef].forEach((ref) => {\r\n            all.push(fetchFromIframe<any, any>({ eventName: GET_DATA_EVENT_NAME }, ref.current?.contentWindow as Window))\r\n        });\r\n        try {\r\n            const result = await Promise.all(all);\r\n            setSomeData(JSON.stringify(result));\r\n        } catch (error) {\r\n            setSomeData(JSON.stringify(error));\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"con\">\r\n            <h2>Async Massage</h2>\r\n            <div className=\"field\">\r\n                <button onClick={async () => await getData()}>Give Me Your Data Please</button>\r\n                <div className=\"data\">\r\n                    {loading && <div className=\"loader\">Loading...</div>}\r\n                    {!loading && <div className=\"loader\">{someData}</div>}\r\n                </div>\r\n            </div>\r\n            <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/asyncIframe?title=iframeChild1\" />\r\n            <iframe title=\"two\" ref={twoRef} id=\"one\" src=\"/asyncIframe?title=iframeChild2\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AsyncMessage;","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\useAsyncMessage.ts",["185","186","187"],"\r\nimport { RefObject, useCallback, useEffect } from \"react\";\r\nimport { v1 } from \"uuid\";\r\n\r\nconst TIME_OUT = 10000;\r\n\r\nexport interface IframeMessageEvent<T = any> {\r\n    requestId?: string,\r\n    eventName: string,\r\n    payload?: T,\r\n    errors?: string[]\r\n}\r\n\r\nexport const getEndPointEventNames = (endPointName: string): { req: string, res: string, error: string } => {\r\n    return { req: `${endPointName}_req`, res: `${endPointName}_res`, error: `${endPointName}_error` }\r\n}\r\n\r\nexport async function fetchFromIframe<T = any, S = any>(message: IframeMessageEvent<T>, targetWin: Window): Promise<S> {\r\n    const { eventName, payload } = message;\r\n    const { req, res, error } = getEndPointEventNames(eventName);\r\n    const eventsNames = [req, error];\r\n    const token = v1();\r\n    return new Promise((resolve, reject) => {\r\n        const senderWin = targetWin?.parent;\r\n        const timeoutCleaner = setTimeout(function () {\r\n            reject([\"timeout\"]);\r\n            _clean();\r\n        }, TIME_OUT);\r\n        const _clean = () => {\r\n            clearTimeout(timeoutCleaner);\r\n            senderWin?.removeEventListener(\"message\", onMessageHandler);\r\n        }\r\n        const onMessageHandler: (this: Window, ev: MessageEvent<IframeMessageEvent<S>>) => any = ({ data }) => {\r\n            const { eventName, payload, requestId, errors } = data;\r\n            if (!eventsNames.includes(eventName) && requestId === token) return;\r\n            console.log(`sender onmassage ${eventName} handler call`);\r\n\r\n            switch (eventName) {\r\n                case res: _clean(); console.log(\"resolved\"); payload && resolve(payload); break;\r\n                case error: _clean(); console.log(\"rejected\"); reject(errors); break;\r\n            }\r\n        }\r\n        console.log(\"Event listener on Window\");\r\n        senderWin.addEventListener(\"message\", onMessageHandler);\r\n        console.log(`Event ${req} posted to iframe`);\r\n        targetWin.postMessage({ eventName: req, payload, requestId: token }, \"*\");\r\n\r\n    })\r\n}\r\n\r\nexport const useCreateIframeEndPoint = (endPoint: string, iframeWindow: Window, handler: (message: any) => Promise<any>) => {\r\n    const { req, res, error } = getEndPointEventNames(endPoint);\r\n\r\n    const onMessageHandler: (this: Window, ev: MessageEvent<any>) => any = useCallback((ev) => {\r\n        const { requestId, payload, eventName, errors } = ev?.data;\r\n        let iframeWin = iframeWindow;\r\n        let senderWin = iframeWin?.parent;\r\n        console.log(\"handler call\");\r\n        if (eventName !== req) return;\r\n        handler(payload)\r\n            .then((data) => {\r\n                senderWin?.postMessage({ eventName: res, requestId, payload: data }, \"*\")\r\n            })\r\n            .catch(() => {\r\n                senderWin?.postMessage({ eventName: error, requestId, errors }, \"*\")\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let iframeWin = iframeWindow\r\n        let senderWin = iframeWin?.parent;\r\n        if (!iframeWin || !senderWin) return;\r\n        console.log(`Event listener on iframe`);\r\n        iframeWin.addEventListener(\"message\", onMessageHandler)\r\n        return () => { console.log(\"unmounted\"); iframeWin?.removeEventListener(\"message\", onMessageHandler) }\r\n    }, [])\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\AsyncMessage\\AsyncIframe.tsx",[],"C:\\repos\\ifarems-poc\\src\\providers\\CalcProvider.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModelIfarme.tsx",["188","189","190"],"import React, { FC, useCallback, useEffect, useState } from \"react\";\r\nexport const SharedModelIfarme = () => {\r\n    const [argA, setArgA] = useState<number>(0);\r\n    const [argB, setArgB] = useState<number>(0);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [result, setResult] = useState<number>(0);\r\n    const [lastResult, setLastResult] = useState<number>(0);\r\n    const [calcService, setCalcService] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    const ProxyHandler: ProxyHandler<object> = {\r\n        get: (target: any, prop: string, reciver: any) => {\r\n            if (typeof target[prop] === \"function\") {\r\n                return new Proxy((target[prop] as Function), {\r\n                    apply: (target: Function, thisArg: any, argArray?: any) => {\r\n                        return target.call(calcService, ...argArray)\r\n                    }\r\n                })\r\n            }\r\n            return target[prop];\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!window?.parent || calcService) return;\r\n        const calc = new Proxy((window as any).parent.CalcProvider, ProxyHandler);\r\n        setCalcService(calc);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!calcService) return;\r\n        const result = calcService.Add(argA, argB);\r\n        setResult(result);\r\n    }, [argA, argB, calcService]);\r\n\r\n    const getLastResult = useCallback(() => {\r\n        setLastResult(calcService?.lastResult)\r\n    }, [result]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"field\">\r\n                <input type=\"number\" value={argA} onChange={({ target }) => setArgA(Number.parseInt(target.value))} />\r\n                <input type=\"number\" value={argB} onChange={({ target }) => setArgB(Number.parseInt(target.value))} />\r\n            </div>\r\n            <div className=\"result\">{result}</div>\r\n            <button onClick={getLastResult}>Get Last Value</button>\r\n            <div className=\"result\">{lastResult}</div>\r\n            <button onClick={() => { calcService.lastResult++ }}>Increase lastResult value</button>\r\n        </>\r\n    )\r\n}\r\n","C:\\repos\\ifarems-poc\\src\\examples\\SharedModel\\SharedModel.tsx",["191","192","193","194"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { isString } from \"util\";\r\nimport { CalcProvider } from \"../../providers/CalcProvider\";\r\nimport \"./SharedModel.css\";\r\nconst TwoWayMessage = () => {\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        (window as any).CalcProvider = new CalcProvider();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"con\">\r\n            <h2>Shared Model</h2>\r\n            <iframe title=\"one\" height={\"300px\"} ref={oneRef} id=\"one\" src=\"/shared_model?title=iframeChild1\" />\r\n            <iframe title=\"two\" height={\"300px\"} ref={twoRef} id=\"two\" src=\"/shared_model?title=iframeChild2\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TwoWayMessage;","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\IframeNotifications.tsx",["195"],"import React, { FC, useEffect, useState } from \"react\";\r\nexport const NotificationIframe = () => {\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <button onClick={() => {\r\n                Notification.requestPermission().then(function (permission) {\r\n                    if (permission === \"granted\") {\r\n                        new Notification(\"Hi there!\");\r\n                    }\r\n                });\r\n            }}>Notifi Me</button>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\Notofications\\Notifications.tsx",["196","197","198","199"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { isString } from \"util\";\r\n\r\nconst Notifications = () => {\r\n    const oneRef = useRef(null);\r\n    return (\r\n        <div className=\"con\">\r\n            <h2>Notifications</h2>\r\n            <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/notification_iframe?title=iframe\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\ModalIframe.tsx",["200","201","202","203","204"],"import React, { DialogHTMLAttributes, FC, useEffect, useRef, useState } from \"react\";\r\nimport { UILauncher } from \"./UiLauncher\";\r\n\r\nexport const ModalIframe = () => {\r\n    const [counter, setCounter] = useState<number>(0);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [parentModal, setParentModal] = useState<HTMLDivElement | null>();\r\n    const modalContentRef = useRef<HTMLDivElement>(null);\r\n    const increaseBtnRef = useRef<HTMLButtonElement>(null);\r\n    const [uiToLaunch, setUiToLaunch] = useState<UILauncher>();\r\n\r\n    useEffect(() => {\r\n        import(\"./modalContentLitElement\").then(console.log);\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!window?.parent?.window) return;\r\n        setParentModal(window.parent.window.document.body.querySelector<HTMLDivElement>(\".modals\"));\r\n    }, []);\r\n\r\n    const showModal = () => {\r\n        if (!parentModal || !modalContentRef.current) return;\r\n        if(!uiToLaunch){\r\n            const ui = new UILauncher(modalContentRef.current, parentModal);\r\n            setUiToLaunch(ui);\r\n        }\r\n\r\n        uiToLaunch?.launch();\r\n        // const parentElement = parentModal.parentElement;\r\n        // const modalElm = document.createElement('div');\r\n        // modalElm.innerText = \"Some TEXT\";\r\n        // parentModal.innerHTML = '';\r\n        // parentModal.appendChild(modalContentRef.current);\r\n        // parentElement?.classList.add(\"opened\");\r\n        // parentElement.onclick = () => { parentElement.classList.remove(\"opened\"); parentModal?.setAttribute(\"open\", \"false\"); };\r\n        // parentModal?.setAttribute(\"open\", \"true\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <button onClick={showModal}>Show Modal</button>\r\n            <div ref={modalContentRef} style={{ color: \"red\" }}>\r\n                <hello-component />\r\n            </div>\r\n            <button onClick={()=>{(window.parent as any).Toaster.info(\"213123\")}}> Show Toaster Message</button>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\SharedModal.tsx",["205","206"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Toaster from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport \"./ModalIframe\";\r\nimport \"./SharedModal.css\";\r\nconst SharedModal = () => {\r\n    const toasterCon = useRef<any>();\r\n    useEffect(() => {\r\n        Toaster.options.target = toasterCon?.current;\r\n        (window as any).Toaster = Toaster;\r\n    }, [])\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"con\">\r\n                <h2>Show Modal</h2>\r\n                <button onClick={() => { Toaster.info(\"hi\") }}>toast</button>\r\n                <iframe title=\"one\" ref={oneRef} id=\"one\" src=\"/modal_iframe?title=iframeChild1\" />\r\n                <iframe title=\"two\" ref={twoRef} id=\"two\" src=\"/modal_iframe?title=iframeChild2\" />\r\n            </div>\r\n            <div className=\"modals\">\r\n            </div>\r\n            <div ref={toasterCon} className=\"toaster\">\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SharedModal;\r\nclass ModalService {\r\n    rootElm: HTMLElement;\r\n    constructor(rootElm: HTMLElement) {\r\n        this.rootElm = rootElm;\r\n    }\r\n    showModal = (content: HTMLElement) => {\r\n        this.rootElm.append(content);\r\n    }\r\n}\r\n\r\nsetTimeout(() => {\r\n    const modalsCon = document.getElementById(\"modals-con\");\r\n    (window as any).modalService = modalsCon ? new ModalService(modalsCon) : null;\r\n}, 3000);","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagment.tsx",["207","208","209"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport \"./StateManagment.css\";\r\nimport { configureStore } from \"./dynamicLoadReducers\";\r\n\r\n\r\nconst StateManagment = () => {\r\n    const [someValue, setSomeValue] = useState<string>('');\r\n    const val = useSelector(state => JSON.stringify(state));\r\n    const oneRef = useRef<HTMLIFrameElement>(null);\r\n    const twoRef = useRef<HTMLIFrameElement>(null);\r\n    const [showPosts, setShowPosts] = useState<boolean>(false);\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"con\">\r\n            <h2>State Management</h2>\r\n            <div className=\"\">{val}</div>\r\n            <h3>Redux</h3>\r\n            <button onClick={()=>setShowPosts(!showPosts)}>Show Posts</button>\r\n            <iframe title=\"one\" height={\"300px\"} ref={oneRef} id=\"one\" src=\"/state_managemnet_Iframe?title=users\" />\r\n            {showPosts && <iframe title=\"two\" height={\"300px\"} ref={oneRef} id=\"two\" src=\"/state_managemnet_Iframe?title=posts\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst store = configureStore({});\r\n\r\nconst StateManagmentWrapper = () => {\r\n\r\n    useEffect(() => {\r\n        (window as any).Store = store;\r\n    }, []);\r\n\r\n    return (\r\n        < Provider store={store} >\r\n            <StateManagment />\r\n        </Provider >)\r\n\r\n}\r\n\r\nexport default StateManagmentWrapper;\r\n","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentIframe.tsx",["210","211","212","213","214","215","216","217","218","219"],"import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { AnyAction, Store, Reducer, Action } from \"redux\";\r\nimport { Provider, useDispatch, useSelector } from 'react-redux';\r\nimport { injectAsyncReducer, removeReducer } from \"./dynamicLoadReducers\";\r\n\r\nexport const StateManagmentIframe = ({ type }: { type: string }) => {\r\n    const [payload, setPayload] = useState<Object>({});\r\n    const [title, setTitle] = useState<string>('');\r\n    const result = useSelector((state: any) => state[type]);\r\n    const actionRef = useRef<() => Action<any>>();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!type) return;\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n        import(`./reducers/${type}`).then(({ actionCreator }) => {\r\n            actionRef.current = actionCreator;\r\n        })\r\n    }, [type]);\r\n\r\n    const addHandler = useCallback((ev) => {\r\n        dispatch(actionRef.current?.());\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"field\">\r\n                <button onClick={addHandler}>Add {type}</button>\r\n            </div>\r\n            <div className=\"result\">{JSON.stringify(result)}</div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport const StateManagementIframeWrapper = () => {\r\n    const [store, setStore] = useState<Store<any>>();\r\n    const [iframeType, setIframeType] = useState<string>(\"\");\r\n\r\n    const ProxyHandler: ProxyHandler<object> = {\r\n        get: (target: any, prop: string, reciver: any) => {\r\n            if (typeof target[prop] === \"function\") {\r\n                return new Proxy((target[prop] as Function), {\r\n                    apply: (target: Function, thisArg: any, argArray?: any) => {\r\n                        return target.call(store, ...argArray)\r\n                    }\r\n                })\r\n            }\r\n            return target[prop];\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!(window?.parent as any)?.Store || store) return;\r\n        const s = (window as any).parent.Store;//new Proxy((window as any).parent.Store, ProxyHandler);\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setIframeType(title);\r\n        title && import(`./reducers/${title}`).then((module: any) => {\r\n            const reducer = module?.[title];\r\n            console.log(reducer);\r\n            injectAsyncReducer(s, title, reducer)\r\n        })\r\n        setStore(s);\r\n    }, [(window?.parent as any)?.Store]);\r\n\r\n    useEffect(() => () => {\r\n        debugger;\r\n        removeReducer(store, iframeType as string)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h2>test</h2>\r\n            {store ? <Provider store={store}>\r\n                <StateManagmentIframe type={iframeType} />\r\n            </Provider> : null}\r\n        </>)\r\n}\r\n\r\n","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\users.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\dynamicLoadReducers.ts",["220"],"// This part of code is copied from Dan Abramov answer - https://stackoverflow.com/a/33044701/2902013 \r\n\r\nimport { combineReducers, Reducer, Store } from 'redux';\r\nimport { createStore } from 'redux';\r\n//couple of reducers available as part of inital config of app.\r\n// import users from './reducers/users';\r\n// import posts from './reducers/posts';\r\n\r\n\r\n\r\nexport function createReducer(asyncReducers?: { [key: string]: Reducer }) {\r\n    return combineReducers({\r\n        ...asyncReducers\r\n    });\r\n}\r\n\r\nexport function configureStore(initialState: any) {\r\n    const store = createStore(createReducer(), initialState);\r\n    (store as any).asyncReducers = {};\r\n    return store;\r\n}\r\n\r\nexport function injectAsyncReducer(store: any, name: string, asyncReducer: Reducer) {\r\n    store.asyncReducers[name] = asyncReducer;\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n}\r\n\r\nexport function removeReducer(store: any, name: string) {\r\n    delete store?.asyncReducers?.[name];\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n}\r\n\r\n// Assuming React Router here but the principle is the same\r\n// regardless of the library: make sure store is available\r\n// when you want to require.ensure() your reducer so you can call\r\n// injectAsyncReducer(store, name, reducer).\r\n\r\n// function createRoutes(store:Store) {\r\n//     // ...\r\n\r\n//     const CommentsRoute = {\r\n//         // ...\r\n\r\n//         getComponents(location, callback) {\r\n//             require.ensure([\r\n//                 './pages/Comments',\r\n//                 './reducers/comments'\r\n//             ], function (require) {\r\n//                 const Comments = require('./pages/Comments').default;\r\n//                 const commentsReducer = require('./reducers/comments').default;\r\n\r\n//                 injectAsyncReducer(store, 'comments', commentsReducer);\r\n//                 callback(null, Comments);\r\n//             })\r\n//         }\r\n//     };\r\n\r\n//     // ...\r\n// }","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\reducers\\posts.ts",["221","222"],"import { Action, AnyAction } from \"redux\"\r\n\r\ninterface Post {\r\n    title: string,\r\n    author: string,\r\n    description: string\r\n}\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nexport const actionCreator = () => ({ type: ADD_POST, payload: { title: \"Ohad\", author: \"benShimol\", description: \"aaa\" } as Post })\r\n\r\nexport function posts(state: Post[] = [], { type, payload }: { type: string, payload: Post }) {\r\n    switch (type) {\r\n        case ADD_POST:\r\n            return state.concat(payload);\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThings.tsx",["223","224","225"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Resizable, ResizableBox } from 'react-resizable';\r\nimport './handlerStyle.css';\r\n\r\nconst UiThings = () => {\r\n    const oneRef = useRef(null);\r\n    const [wh, setWh] = useState<number[]>([200, 200]);\r\n    return (\r\n\r\n        <div className=\"con\">\r\n            <h2>UI Things</h2>\r\n            <ResizableBox onResize={(ev, { size }) => setWh([size.width - 35, size.height - 35])} width={350} height={200} draggableOpts={{}} minConstraints={[100, 100]} maxConstraints={[700, 700]}>\r\n                <iframe style={{ border: \"1px solid red\", width: wh[0], height: wh[1] }} title=\"one\" ref={oneRef} id=\"one\" src=\"/ui_things_iframe?title=iframe\" />\r\n                <span>Contents</span>\r\n            </ResizableBox>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UiThings;","C:\\repos\\ifarems-poc\\src\\examples\\UiThings.tsx\\UiThingsIframe.tsx",["226"],"import React, { FC, useEffect, useState } from \"react\";\r\n\r\nexport const UiThingsIframe = () => {\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"\">qwerawefawerraw</div>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACacheIframe.tsx",["227"],"import React, { FC, useEffect, useState } from \"react\";\r\n\r\nexport const PWACacheIframe = () => {\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const title = new URL(window.location.href)?.searchParams.get(\"title\");\r\n        title && setTitle(title);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>{title}</h3>\r\n            <div className=\"\">cache</div>\r\n            <img src=\"./logo192.png\" alt=\"\"/>\r\n        </>\r\n    )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\PWACache.tsx",["228","229","230","231","232"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Resizable, ResizableBox } from 'react-resizable';\r\nimport { IframeCross } from \"./IframeCross\";\r\n\r\nconst PWACache = () => {\r\n    const oneRef = useRef(null);\r\n    const [wh, setWh] = useState<number[]>([200, 200]);\r\n    return (\r\n        <div className=\"con\">\r\n            <h2>PWA Cache</h2>\r\n            <iframe style={{ border: \"1px solid red\", width: wh[0], height: wh[1] }} title=\"one\" ref={oneRef} id=\"one\" src=\"/PWA_Cache_iframe?title=iframe\" />\r\n        <IframeCross src={\"http://localhost:3333\"}></IframeCross>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PWACache;","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentDexie.tsx",["233"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./StateManagment.css\";\r\nimport { db } from \"../../App\";\r\nimport { useLiveQuery } from \"dexie-react-hooks\";\r\n\r\nexport const StateManagmentDexie = () => {\r\n  const listElmRef = useRef<HTMLIFrameElement>(null);\r\n  const count = useLiveQuery(() => db.tasks?.count());\r\n  const [listHeight, setListHeight] = useState(200);\r\n  useEffect(() => {\r\n    if (!listElmRef.current) return;\r\n    const {clientHeight, scrollHeight, sty} = listElmRef.current.contentWindow?.document?.body as any || {};\r\n    const h = Math.min(clientHeight, scrollHeight);\r\n    h && setListHeight(h);\r\n  }, [count]);\r\n\r\n  return (\r\n    <div className=\"con\">\r\n      <h2>State Management</h2>\r\n      <h3>Indexeddb with dexie.js</h3>\r\n      <iframe className=\"todo\" title=\"three\" height={\"125px\"} width={\"100%\"} id=\"three\" src=\"/state_managemnet_dexie_Iframe?title=header\" />\r\n      <iframe ref={listElmRef} className=\"todo\" title=\"three\" height={`${listHeight+40}px`} width={\"100%\"} id=\"three\" src=\"/state_managemnet_dexie_Iframe?title=list\" />\r\n      <iframe className=\"todo\" title=\"three\" height={\"90px\"} width={\"100%\"} id=\"three\" src=\"/state_managemnet_dexie_Iframe?title=footer\" />\r\n    </div>\r\n  )\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\StateManagmentDexieIframe.tsx",["234","235"],"import { useLiveQuery } from \"dexie-react-hooks\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { db } from \"../../App\";\r\nimport { liveQuery } from \"dexie\";\r\nimport { TodoApp, TodoFooter, TodoHeader, TodoList } from \"../../todo-react/components\";\r\n\r\ntype TodoParts = \"header\" | \"list\" | \"footer\";\r\n\r\nexport function StateManagmentDexieIframe() {\r\n  const [title, setTitle] = useState<TodoParts>();\r\n\r\n  const tasks = useLiveQuery(() => db.tasks.toArray(), [], []);\r\n  const filters = useLiveQuery(() => db.filters.toArray(), [], []);\r\n\r\n  useEffect(() => {\r\n    const title: TodoParts = new URL(window.location.href)?.searchParams.get(\"title\") as TodoParts;\r\n    title && setTitle(title);\r\n  }, []);\r\n\r\n  const activeFilters = filters?.filter(({ active }:any) => active).map(({ name }:any) => name)\r\n  const TasksToRender = tasks?.filter(({ completed, deleted }:any) => {\r\n    return (completed && activeFilters?.includes(\"completed\"))\r\n      ||\r\n      (!deleted && !completed && activeFilters?.includes(\"pending\"));\r\n  })\r\n  return <>\r\n    {title?.includes(\"header\") ? <TodoHeader onAddTask={({ detail: title }) => db.addTask({ title, completed: false, deleted: false })} /> : null}\r\n    {title?.includes(\"list\") ? <TodoList\r\n      tasks={TasksToRender}\r\n      onCompleteTask={({ detail }) => { db.completeTask(detail.id, detail.completed) }}\r\n      onDeleteTask={({ detail: id }) => db.deleteTask(id)} activefilters={activeFilters}\r\n    /> : null}\r\n    {title?.includes(\"footer\") ? <TodoFooter\r\n      onFilterToggle={({ detail }) => db.changeFilter(detail.name, detail.active)}\r\n      onClear={() => db.tasks.clear()}\r\n      tasks={tasks} filters={filters}\r\n    /> : null}\r\n  </>;\r\n}","C:\\repos\\ifarems-poc\\src\\todo-react\\components.ts",[],"C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\index.ts",[],"C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\createComponent.tsx",["236"],"import React from 'react';\n\nimport {\n  attachProps,\n  createForwardRef,\n  dashToPascalCase,\n  isCoveredByReact,\n  mergeRefs,\n} from './utils';\n\nexport interface HTMLStencilElement extends HTMLElement {\n  componentOnReady(): Promise<this>;\n}\n\ninterface StencilReactInternalProps<ElementType> extends React.HTMLAttributes<ElementType> {\n  forwardedRef: React.RefObject<ElementType>;\n  ref?: React.Ref<any>;\n}\n\nexport const createReactComponent = <\n  PropType,\n  ElementType extends HTMLStencilElement,\n  ContextStateType = {},\n  ExpandedPropsTypes = {}\n>(\n  tagName: string,\n  ReactComponentContext?: React.Context<ContextStateType>,\n  manipulatePropsFunction?: (\n    originalProps: StencilReactInternalProps<ElementType>,\n    propsToPass: any,\n  ) => ExpandedPropsTypes,\n) => {\n  const displayName = dashToPascalCase(tagName);\n\n  const ReactComponent = class extends React.Component<StencilReactInternalProps<ElementType>> {\n    componentEl!: ElementType;\n\n    setComponentElRef = (element: ElementType) => {\n      this.componentEl = element;\n    };\n\n    constructor(props: StencilReactInternalProps<ElementType>) {\n      super(props);\n    }\n\n    componentDidMount() {\n      this.componentDidUpdate(this.props);\n    }\n\n    componentDidUpdate(prevProps: StencilReactInternalProps<ElementType>) {\n      attachProps(this.componentEl, this.props, prevProps);\n    }\n\n    render() {\n      const { children, forwardedRef, style, className, ref, ...cProps } = this.props;\n\n      let propsToPass = Object.keys(cProps).reduce((acc, name) => {\n        if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n          const eventName = name.substring(2).toLowerCase();\n          if (typeof document !== 'undefined' && isCoveredByReact(eventName, document)) {\n            (acc as any)[name] = (cProps as any)[name];\n          }\n        } else {\n          (acc as any)[name] = (cProps as any)[name];\n        }\n        return acc;\n      }, {});\n\n      if (manipulatePropsFunction) {\n        propsToPass = manipulatePropsFunction(this.props, propsToPass);\n      }\n\n      let newProps: Omit<StencilReactInternalProps<ElementType>, 'forwardedRef'> = {\n        ...propsToPass,\n        ref: mergeRefs(forwardedRef, this.setComponentElRef),\n        style,\n      };\n\n      return React.createElement(tagName, newProps, children);\n    }\n\n    static get displayName() {\n      return displayName;\n    }\n  };\n\n  // If context was passed to createReactComponent then conditionally add it to the Component Class\n  if (ReactComponentContext) {\n    ReactComponent.contextType = ReactComponentContext;\n  }\n\n  return createForwardRef<PropType, ElementType>(ReactComponent, displayName);\n};\n","C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\createOverlayComponent.tsx",[],"C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\utils\\index.tsx",[],"C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\utils\\attachProps.ts",[],"C:\\repos\\ifarems-poc\\src\\todo-react\\react-component-lib\\utils\\case.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\StateManagment\\todoDbService.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\modalContentLitElement.ts",[],"C:\\repos\\ifarems-poc\\src\\examples\\SharedModal\\UiLauncher.ts",["237"],"import { threadId } from \"worker_threads\";\r\n\r\nexport class UILauncher {\r\n    launchAddress: HTMLElement;\r\n    contentElement: HTMLElement;\r\n    dialogElement: HTMLDialogElement = document.createElement(\"dialog\");\r\n    closeBtn: HTMLDivElement = document.createElement(\"div\");\r\n    baseOrigin: HTMLElement\r\n    constructor(contentElement: HTMLElement, addresContainer: HTMLElement) {\r\n        this.contentElement = contentElement;\r\n        this.baseOrigin = this.contentElement.parentElement ? this.contentElement.parentElement : document.body;\r\n        this.launchAddress = addresContainer;\r\n        this.closeBtn.innerHTML = \"<h2>X</h2>\";\r\n        this.closeBtn.onclick = ()=>this.land();\r\n        this.dialogElement.append(this.closeBtn);\r\n    }\r\n    launch() {\r\n        // append to the parent element;\r\n        this.dialogElement.open = false;\r\n        this.dialogElement.append(this.contentElement);\r\n        this.launchAddress.append(this.dialogElement);\r\n        this.open();\r\n    }\r\n    land() {\r\n        // return to the native place\r\n        this.close();\r\n        this.baseOrigin.append(this.contentElement);\r\n        this.dialogElement.remove();\r\n    }\r\n    destroy() {\r\n        // delete the element\r\n        this.contentElement.remove();\r\n        this.dialogElement.remove();\r\n    }\r\n    open() {\r\n        //show\r\n        this.dialogElement.open = true;\r\n        this.launchAddress.classList.add(\"opened\");\r\n    }\r\n    close() {\r\n        //hide\r\n        this.dialogElement.open = false;\r\n        this.launchAddress.classList.remove(\"opened\");\r\n    }\r\n}","C:\\repos\\ifarems-poc\\src\\examples\\PWACache\\IframeCross.tsx",["238","239","240","241","242"],"import React, { FC, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\n\r\nexport const IframeCross: FC<{ src: string }> = ({ src }) => {\r\n    const [html, setHtml] = useState<string>();\r\n    const iframeRef = useRef<HTMLIFrameElement>(null);\r\n\r\n    useEffect(() => {\r\n        fetch(src).then(function (response) {\r\n            response.text().then((text) => {\r\n                const head = text.match(/<head>((.|\\n)*?)<\\/head>/);\r\n                let headContent = head?.[1];\r\n                setHtml(`<base href=${src}/>${headContent}`);\r\n            });\r\n        });\r\n    }, [src]);\r\n\r\n    useEffect(() => {\r\n        if (!html || !iframeRef.current) return;\r\n        const parser = new DOMParser();\r\n        var meta = document.createElement('meta');\r\n        iframeRef.current.contentWindow?.document.open();\r\n        iframeRef.current.contentWindow?.document.write(html);\r\n        iframeRef.current.contentWindow?.document.close();\r\n    }, [html, iframeRef.current]);\r\n\r\n    return (\r\n        <iframe ref={iframeRef}>\r\n            <h2>Loading...</h2>\r\n        </iframe>\r\n    )\r\n}\r\n\r\n",{"ruleId":"243","severity":1,"message":"244","line":7,"column":3,"nodeType":"245","messageId":"246","endLine":7,"endColumn":7},{"ruleId":"243","severity":1,"message":"247","line":12,"column":8,"nodeType":"245","messageId":"246","endLine":12,"endColumn":19},{"ruleId":"243","severity":1,"message":"248","line":17,"column":8,"nodeType":"245","messageId":"246","endLine":17,"endColumn":16},{"ruleId":"243","severity":1,"message":"249","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"251","line":21,"column":8,"nodeType":"252","endLine":21,"endColumn":10,"suggestions":"253"},{"ruleId":"243","severity":1,"message":"254","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"255","line":2,"column":27,"nodeType":"245","messageId":"246","endLine":2,"endColumn":50},{"ruleId":"243","severity":1,"message":"256","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":19},{"ruleId":"250","severity":1,"message":"257","line":67,"column":8,"nodeType":"252","endLine":67,"endColumn":10,"suggestions":"258"},{"ruleId":"250","severity":1,"message":"259","line":76,"column":8,"nodeType":"252","endLine":76,"endColumn":10,"suggestions":"260"},{"ruleId":"243","severity":1,"message":"249","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"261","line":32,"column":8,"nodeType":"252","endLine":32,"endColumn":10,"suggestions":"262"},{"ruleId":"250","severity":1,"message":"263","line":42,"column":8,"nodeType":"252","endLine":42,"endColumn":16,"suggestions":"264"},{"ruleId":"243","severity":1,"message":"265","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":28},{"ruleId":"243","severity":1,"message":"266","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":18},{"ruleId":"243","severity":1,"message":"267","line":6,"column":12,"nodeType":"245","messageId":"246","endLine":6,"endColumn":21},{"ruleId":"243","severity":1,"message":"268","line":6,"column":23,"nodeType":"245","messageId":"246","endLine":6,"endColumn":35},{"ruleId":"243","severity":1,"message":"249","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":19},{"ruleId":"243","severity":1,"message":"265","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":28},{"ruleId":"243","severity":1,"message":"254","line":1,"column":30,"nodeType":"245","messageId":"246","endLine":1,"endColumn":39},{"ruleId":"243","severity":1,"message":"269","line":1,"column":49,"nodeType":"245","messageId":"246","endLine":1,"endColumn":57},{"ruleId":"243","severity":1,"message":"266","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":18},{"ruleId":"243","severity":1,"message":"270","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":37},{"ruleId":"243","severity":1,"message":"249","line":1,"column":39,"nodeType":"245","messageId":"246","endLine":1,"endColumn":41},{"ruleId":"243","severity":1,"message":"271","line":5,"column":12,"nodeType":"245","messageId":"246","endLine":5,"endColumn":19},{"ruleId":"243","severity":1,"message":"272","line":5,"column":21,"nodeType":"245","messageId":"246","endLine":5,"endColumn":31},{"ruleId":"243","severity":1,"message":"273","line":9,"column":11,"nodeType":"245","messageId":"246","endLine":9,"endColumn":25},{"ruleId":"243","severity":1,"message":"267","line":12,"column":12,"nodeType":"245","messageId":"246","endLine":12,"endColumn":21},{"ruleId":"243","severity":1,"message":"268","line":12,"column":23,"nodeType":"245","messageId":"246","endLine":12,"endColumn":35},{"ruleId":"243","severity":1,"message":"267","line":8,"column":12,"nodeType":"245","messageId":"246","endLine":8,"endColumn":21},{"ruleId":"243","severity":1,"message":"268","line":8,"column":23,"nodeType":"245","messageId":"246","endLine":8,"endColumn":35},{"ruleId":"243","severity":1,"message":"274","line":11,"column":11,"nodeType":"245","messageId":"246","endLine":11,"endColumn":17},{"ruleId":"243","severity":1,"message":"249","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":19},{"ruleId":"243","severity":1,"message":"275","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":19},{"ruleId":"243","severity":1,"message":"276","line":2,"column":28,"nodeType":"245","messageId":"246","endLine":2,"endColumn":35},{"ruleId":"243","severity":1,"message":"277","line":7,"column":12,"nodeType":"245","messageId":"246","endLine":7,"endColumn":19},{"ruleId":"243","severity":1,"message":"278","line":7,"column":21,"nodeType":"245","messageId":"246","endLine":7,"endColumn":31},{"ruleId":"250","severity":1,"message":"279","line":24,"column":8,"nodeType":"252","endLine":24,"endColumn":10,"suggestions":"280"},{"ruleId":"243","severity":1,"message":"281","line":43,"column":11,"nodeType":"245","messageId":"246","endLine":43,"endColumn":45},{"ruleId":"250","severity":1,"message":"282","line":67,"column":8,"nodeType":"252","endLine":67,"endColumn":40,"suggestions":"283"},{"ruleId":"250","severity":1,"message":"284","line":67,"column":9,"nodeType":"285","endLine":67,"endColumn":39},{"ruleId":"250","severity":1,"message":"286","line":72,"column":8,"nodeType":"252","endLine":72,"endColumn":10,"suggestions":"287"},{"ruleId":"243","severity":1,"message":"288","line":3,"column":36,"nodeType":"245","messageId":"246","endLine":3,"endColumn":41},{"ruleId":"243","severity":1,"message":"289","line":1,"column":10,"nodeType":"245","messageId":"246","endLine":1,"endColumn":16},{"ruleId":"243","severity":1,"message":"275","line":1,"column":18,"nodeType":"245","messageId":"246","endLine":1,"endColumn":27},{"ruleId":"243","severity":1,"message":"265","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":28},{"ruleId":"243","severity":1,"message":"254","line":1,"column":30,"nodeType":"245","messageId":"246","endLine":1,"endColumn":39},{"ruleId":"243","severity":1,"message":"290","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":19},{"ruleId":"243","severity":1,"message":"249","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":19},{"ruleId":"243","severity":1,"message":"249","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":19},{"ruleId":"243","severity":1,"message":"265","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":28},{"ruleId":"243","severity":1,"message":"254","line":1,"column":30,"nodeType":"245","messageId":"246","endLine":1,"endColumn":39},{"ruleId":"243","severity":1,"message":"290","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":19},{"ruleId":"243","severity":1,"message":"291","line":2,"column":21,"nodeType":"245","messageId":"246","endLine":2,"endColumn":33},{"ruleId":"243","severity":1,"message":"292","line":7,"column":16,"nodeType":"245","messageId":"246","endLine":7,"endColumn":21},{"ruleId":"243","severity":1,"message":"293","line":12,"column":40,"nodeType":"245","messageId":"246","endLine":12,"endColumn":43},{"ruleId":"243","severity":1,"message":"294","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":19},{"ruleId":"243","severity":1,"message":"295","line":5,"column":10,"nodeType":"245","messageId":"246","endLine":5,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":42,"column":5,"nodeType":"298","messageId":"299","endLine":44,"endColumn":6},{"ruleId":"243","severity":1,"message":"300","line":1,"column":10,"nodeType":"245","messageId":"246","endLine":1,"endColumn":18},{"ruleId":"243","severity":1,"message":"301","line":1,"column":32,"nodeType":"245","messageId":"246","endLine":1,"endColumn":39},{"ruleId":"243","severity":1,"message":"302","line":20,"column":15,"nodeType":"245","messageId":"246","endLine":20,"endColumn":21},{"ruleId":"243","severity":1,"message":"303","line":21,"column":13,"nodeType":"245","messageId":"246","endLine":21,"endColumn":17},{"ruleId":"250","severity":1,"message":"304","line":25,"column":8,"nodeType":"252","endLine":25,"endColumn":33,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":28,"column":9,"nodeType":"308","endLine":28,"endColumn":33},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SharedModel' is defined but never used.","'UiThings' is defined but never used.","'FC' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array.","ArrayExpression",["309"],"'useEffect' is defined but never used.","'useCreateIframeEndPoint' is defined but never used.","'RefObject' is defined but never used.","React Hook useCallback has missing dependencies: 'error', 'handler', 'iframeWindow', 'req', and 'res'. Either include them or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["310"],"React Hook useEffect has missing dependencies: 'iframeWindow' and 'onMessageHandler'. Either include them or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'ProxyHandler' and 'calcService'. Either include them or remove the dependency array.",["312"],"React Hook useCallback has a missing dependency: 'calcService?.lastResult'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLastResult' needs the current value of 'calcService.lastResult'.",["313"],"'useCallback' is defined but never used.","'isString' is defined but never used.","'someValue' is assigned a value but never used.","'setSomeValue' is assigned a value but never used.","'useState' is defined but never used.","'DialogHTMLAttributes' is defined but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'increaseBtnRef' is assigned a value but never used.","'twoRef' is assigned a value but never used.","'AnyAction' is defined but never used.","'Reducer' is defined but never used.","'payload' is assigned a value but never used.","'setPayload' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["314"],"'ProxyHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["315"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ChainExpression","React Hook useEffect has missing dependencies: 'iframeType' and 'store'. Either include them or remove the dependency array.",["316"],"'Store' is defined but never used.","'Action' is defined but never used.","'Resizable' is defined but never used.","'ResizableBox' is defined but never used.","'setWh' is assigned a value but never used.","'sty' is assigned a value but never used.","'liveQuery' is defined but never used.","'TodoApp' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'threadId' is defined but never used.","'useMemo' is defined but never used.","'parser' is assigned a value but never used.","'meta' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'iframeRef.current'. Either exclude it or remove the dependency array. Mutable values like 'iframeRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["317"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},"Update the dependencies array to be: [handler]",{"range":"336","text":"337"},"Update the dependencies array to be: [error, handler, iframeWindow, req, res]",{"range":"338","text":"339"},"Update the dependencies array to be: [iframeWindow, onMessageHandler]",{"range":"340","text":"341"},"Update the dependencies array to be: [ProxyHandler, calcService]",{"range":"342","text":"343"},"Update the dependencies array to be: [calcService?.lastResult]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch]",{"range":"346","text":"347"},"Update the dependencies array to be: [store]",{"range":"348","text":"349"},"Update the dependencies array to be: [iframeType, store]",{"range":"350","text":"351"},"Update the dependencies array to be: [html]",{"range":"352","text":"353"},[684,686],"[handler]",[2847,2849],"[error, handler, iframeWindow, req, res]",[3241,3243],"[iframeWindow, onMessageHandler]",[1293,1295],"[ProxyHandler, calcService]",[1580,1588],"[calcService?.lastResult]",[1026,1028],"[dispatch]",[2528,2560],"[store]",[2673,2675],"[iframeType, store]",[948,973],"[html]"]